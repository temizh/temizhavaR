hourly_detail_data <- hourly_detail_load_from_database("Adana-Seyhan")
create_hourly_time_series_graph(hourly_detail_data, station_name, parameters)
station_name <- "Erzincan"
hourly_detail_data <- hourly_detail_load_from_database("Erzincan")
View(hourly_detail_data)
create_hourly_time_series_graph(hourly_detail_data, station_name, parameters)
calculate_parameter_mean(hourly_detail_data, "NOX")
station_name <- "Erzincan"
hourly_detail_data <- hourly_detail_load_from_database(station_name)
station_name <- "Adana - Valilik"
hourly_detail_data <- hourly_detail_load_from_database(station_name)
View(hourly_detail_data)
create_hourly_time_series_graph(hourly_detail_data, station_name, parameters)
calculate_parameter_mean(hourly_detail_data, "NOX")
library(temizhavaR)
station_name <- "Adana - Valilik"
parameters <- c("SO2", "CO")
daily_detail_data <- daily_detail_load_from_database(station_name)
create_hourly_time_series_graph(daily_detail_data, station_name, parameters)
calculate_parameter_mean(daily_detail_data, "NOX")
View(hourly_detail_data)
nrow(hourly_detail_data)
library(temizhavaR)
station_name <- "Adana - Valilik"
parameters <- c("SO2", "CO")
total_days <- 365
threshold <- 0.9
parameter <- ("PM10")
daily_detail_data <- daily_detail_load_from_database(station_name)
create_hourly_time_series_graph(daily_detail_data, station_name, parameters)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
station_name <- "Adana - Valilik"
parameters <- c("SO2", "CO")
total_days <- 365
threshold <- 0.9
parameter <- "PM10"
daily_detail_data <- daily_detail_load_from_database(station_name)
create_hourly_time_series_graph(daily_detail_data, station_name, parameters)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
#' Calculate specified parameter of specified station
#'
#' @param station_name The name of the station to filter the data.
#' @export
calculate_parameter_mean <- function(data, parameter, threshold, total_days) {
# NA olmayan verileri seç
non_na_data <- na.omit(data[, parameter])
# Verideki NA olmayan veri sayısı
non_na_count <- nrow(non_na_data)
# Tüm veri sayısı
total_count <- nrow(data)
# Eşik değere göre kontrol
if (non_na_count / total_count > threshold) {
mean_value <- mean(non_na_data)
percentage <- 100
} else {
# Eşik değer altında ise uyarı ver
mean_value <- NA
percentage <- (non_na_count / total_count) * 100
warning("Data contains less than ", threshold * 100, "% non-NA values.")
}
# Her gün için yüzdeyi hesapla
daily_percentage <- non_na_count / total_days * 100
browser()
return(list(mean_value = mean_value, percentage = percentage, daily_percentage = daily_percentage))
}
# calculate_parameter_mean <- function(query_result, parameter_name, threshold = 0.9) {
#   # veriler bos degilse
#   if (!is.null(query_result) && length(query_result[[parameter_name]]) > 0) {
#
#     parameter_values <- query_result[[parameter_name]]
#
#     # eksik verileri filtrelioruz
#     parameter_values <- parameter_values[!is.na(parameter_values) & !is.nan(parameter_values)]
#
#     # threholddan fazlaysa hesaplıyoruz
#     if (length(parameter_values) / length(query_result[[parameter_name]]) >= threshold) {
#       mean_value <- mean(parameter_values)
#       return(mean_value)
#     } else {
#       cat("Veri yüzde 90'dan fazla değil, ortalama hesaplanamadı.\n")
#       return(NA)
#     }
#   } else {
#     cat("Veri bulunamadı veya eksik.\n")
#     return(NA)
#   }
# }
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
browser()
browser()
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
browser()
#' Calculate specified parameter of specified station
#'
#' @param station_name The name of the station to filter the data.
#' @export
calculate_parameter_mean <- function(data, parameter, threshold, total_days) {
# NA olmayan verileri seç
non_na_data <- na.omit(data[, parameter])
# Verideki NA olmayan veri sayısı
non_na_count <- nrow(non_na_data)
# Tüm veri sayısı
total_count <- nrow(data)
# Eşik değere göre kontrol
if (non_na_count / total_count > threshold) {
mean_value <- mean(non_na_data)
percentage <- 100
} else {
# Eşik değer altında ise uyarı ver
mean_value <- NA
percentage <- (non_na_count / total_count) * 100
warning("Data contains less than ", threshold * 100, "% non-NA values.")
}
browser()
# Her gün için yüzdeyi hesapla
daily_percentage <- non_na_count / total_days * 100
return(list(mean_value = mean_value, percentage = percentage, daily_percentage = daily_percentage))
}
# calculate_parameter_mean <- function(query_result, parameter_name, threshold = 0.9) {
#   # veriler bos degilse
#   if (!is.null(query_result) && length(query_result[[parameter_name]]) > 0) {
#
#     parameter_values <- query_result[[parameter_name]]
#
#     # eksik verileri filtrelioruz
#     parameter_values <- parameter_values[!is.na(parameter_values) & !is.nan(parameter_values)]
#
#     # threholddan fazlaysa hesaplıyoruz
#     if (length(parameter_values) / length(query_result[[parameter_name]]) >= threshold) {
#       mean_value <- mean(parameter_values)
#       return(mean_value)
#     } else {
#       cat("Veri yüzde 90'dan fazla değil, ortalama hesaplanamadı.\n")
#       return(NA)
#     }
#   } else {
#     cat("Veri bulunamadı veya eksik.\n")
#     return(NA)
#   }
# }
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
total_count
calculate_parameter_mean <- function(data, parameter, threshold, total_days) {
# NA olmayan verileri seç
non_na_data <- na.omit(data[, parameter])
# Verideki NA olmayan veri sayısı
non_na_count <- nrow(non_na_data)
print(non_na_count)
# Tüm veri sayısı
total_count <- nrow(data)
total_count
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
total_count
debugSource("C:/Users/Hp/Desktop/temizhavaR/R/Calculate_Parameter_Mean_Function.R", encoding = 'UTF-8')
debugSource("C:/Users/Hp/Desktop/temizhavaR/R/Calculate_Parameter_Mean_Function.R", encoding = 'UTF-8')
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
library(DBI)
library(readxl)
library(uuid)
library(dygraphs)
#SAVE EXCEL TO DATABASE
# data_dir <- "C:/Daily_detail/"
#
# istasyon <- read_excel(paste0(data_dir, "mersin-tarsus-gunluk-detay.xlsx"))
# processed_data <- data_preprocessing(istasyon)
# daily_detail_save_to_database(processed_data, "Mersin - Tarsus")
station_name <- "Adana - Valilik"
daily_detail_data <- daily_detail_load_from_database(station_name)
total_days <- 365
threshold <- 0.9
parameter <- "PM10"
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
debugSource("C:/Users/Hp/Desktop/temizhavaR/R/Calculate_Parameter_Mean_Function.R", encoding = 'UTF-8')
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
debugSource("C:/Users/Hp/Desktop/temizhavaR/R/Calculate_Parameter_Mean_Function.R", encoding = 'UTF-8')
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
library(DBI)
library(readxl)
library(uuid)
library(dygraphs)
#SAVE EXCEL TO DATABASE
# data_dir <- "C:/Daily_detail/"
#
# istasyon <- read_excel(paste0(data_dir, "mersin-tarsus-gunluk-detay.xlsx"))
# processed_data <- data_preprocessing(istasyon)
# daily_detail_save_to_database(processed_data, "Mersin - Tarsus")
station_name <- "Adana - Valilik"
#parameters <- c("SO2", "CO")
total_days <- 365
threshold <- 0.9
parameter <- "PM10"
daily_detail_data <- daily_detail_load_from_database(station_name)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
parameter <- "SO2"
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
parameter <- "CO"
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
parameter <- "NOX"
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
threshold <- 0.7
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
threshold <- 1
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
threshold <- 1.0
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
threshold <- 0.1
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
threshold <- 0.9
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
parameter <- "PM10"
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
parameter <- "SO2"
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
parameter <- "CO"
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
threshold <- 0.7
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
hourly_detail_data <- hourly_detail_load_from_database(station_name)
total_days <- 8761
calculate_parameter_mean(hourly_detail_data, parameter, threshold, total_days)
create_hourly_time_series_graph(hourly_detail_data, station_name, parameters)
parameters <- c("SO2", "CO")
create_hourly_time_series_graph(hourly_detail_data, station_name, parameters)
threshold <- 0.75
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
library(DBI)
library(readxl)
library(uuid)
library(dygraphs)
station_name <- "Adana - Çukurova"
parameters <- c("SO2", "CO")
total_days <- 365
threshold <- 0.75
parameter <- "CO"
daily_detail_data <- daily_detail_load_from_database(station_name)
library(temizhavaR)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
library(DBI)
library(readxl)
library(uuid)
library(dygraphs)
station_name <- "Adana - Çukurova"
parameters <- c("SO2", "CO")
total_days <- 365
threshold <- 0.75
parameter <- "CO"
daily_detail_data <- daily_detail_load_from_database(station_name)
View(daily_detail_data)
create_hourly_time_series_graph(daily_detail_data, station_name, parameters)
parameters <- c("SO2", "PM10")
create_hourly_time_series_graph(daily_detail_data, station_name, parameters)
parameters <- c("NOX", "PM10")
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
parameter <- "PM10"
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
parameter <- "SO2"
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
threshold <- 0.6
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
threshold <- 0.6
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
threshold <- 0.8
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
threshold <- 0.8
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
threshold <- 0.9
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
library(temizhavaR)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days)
calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days, verbose = TRUE)
x <- calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days, verbose = TRUE)
View(x)
library(tidyverse)
library(readxl)
library(temizhavaR)
library(DBI)
library(uuid)
data_dir <- "C:/Hourly_detail/"
excel_files <- list.files(path = data_dir, pattern = "\\.xlsx$", full.names = TRUE)
all_station_counts <- c()
for (file in excel_files) {
istasyon <- read_excel(file)
processed_data <- data_preprocessing(istasyon)
####### SET PARAMETER
param_name <- "PM2.5"
station_counts <- count_station_list(processed_data, param_name)
all_station_counts <- c(all_station_counts, station_counts)
}
total_station_counts <- sum(all_station_counts)
cat(param_name, " parametresine sahip istasyon sayısı: ", total_station_counts, "\n")
library(tidyverse)
library(readxl)
library(temizhavaR)
library(DBI)
library(uuid)
data_dir <- "C:/Hourly_detail/"
excel_files <- list.files(path = data_dir, pattern = "\\.xlsx$", full.names = TRUE)
all_station_counts <- c()
for (file in excel_files) {
istasyon <- read_excel(file)
processed_data <- data_preprocessing(istasyon)
####### SET PARAMETER
param_name <- "CO"
station_counts <- list_stations_counts_above_threshold(processed_data, param_name)
all_station_counts <- c(all_station_counts, station_counts)
}
total_station_counts <- sum(all_station_counts)
cat(param_name, " parametresine sahip istasyon sayısı: ", total_station_counts, "\n")
#LIST STATIONS FOR THE SPECIFIED PARAMETER
library(tidyverse)
library(readxl)
library(temizhavaR)
library(DBI)
library(uuid)
data_dir <- "C:/Hourly_detail/"
excel_files <- list.files(path = data_dir, pattern = "\\.xlsx$", full.names = TRUE)
all_station_names <- c()
# Apply operations for each Excel file
for (file in excel_files) {
istasyon <- read_excel(file)
processed_data <- data_preprocessing(istasyon)
hourly_detail_save_to_database(processed_data)
# SPECIFIED PARAMETER
station_names <- list_stations(processed_data, "CO")
all_station_names <- c(all_station_names, station_names)
}
all_station_names <- unique(all_station_names)
for (station_name in all_station_names) {
cat("İstasyon: ", station_name, "\n")
}
#LIST STATIONS FOR THE SPECIFIED PARAMETER
library(tidyverse)
library(readxl)
library(temizhavaR)
library(DBI)
library(uuid)
data_dir <- "C:/Hourly_detail/"
excel_files <- list.files(path = data_dir, pattern = "\\.xlsx$", full.names = TRUE)
all_station_names <- c()
# Apply operations for each Excel file
for (file in excel_files) {
istasyon <- read_excel(file)
processed_data <- data_preprocessing(istasyon)
#hourly_detail_save_to_database(processed_data)
# SPECIFIED PARAMETER
station_names <- list_stations(processed_data, "PM10")
all_station_names <- c(all_station_names, station_names)
}
all_station_names <- unique(all_station_names)
for (station_name in all_station_names) {
print(paste("İstasyon:", station_name, "\n"))
}
for (station_name in all_station_names) {
if (verbose) {
print(paste("İstasyon:", station_name))
}
}
View(daily_detail_data)
x <- calculate_parameter_mean(daily_detail_data, parameter, threshold, total_days, verbose = TRUE)
x
library(temizhavaR)
library(temizhavaR)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
library(DBI)
library(readxl)
library(uuid)
library(dygraphs)
station_name <- "Adana - Valilik"
total_days <- 8761
threshold <- 0.7
parameter <- "CO"
parameters <- c("SO2", "CO")
param_name <- "PM10"
hourly_detail_data <- hourly_detail_load_from_database(station_name)
list_stations_with_parameter(hourly_detail_data, param_name)
param_name <- "SO2"
list_stations_with_parameter(hourly_detail_data, param_name)
library(temizhavaR)
list_stations_with_parameter(hourly_detail_data, param_name)
list_stations_with_parameter(hourly_detail_data, param_name)
parameter_value <- "SO2"
list_stations_with_parameter(parameter_value)
library(temizhavaR)
list_stations_with_parameter(hourly_detail_data, parameter_value)
library(temizhavaR)
parameter_name <- "SO2"
list_stations_with_parameter(parameter_name)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
library(DBI)
library(readxl)
library(uuid)
library(dygraphs)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
library(DBI)
library(readxl)
library(uuid)
library(dygraphs)
list_stations_with_parameter(parameter_name)
library(temizhavaR)
list_stations_with_parameter(parameter_name)
parameter_name <- "CO"
list_stations_with_parameter(parameter_name)
list_stations_with_parameter(parameter_name)
list_stations_with_parameter(parameter_name)
list_stations_with_parameter(parameter_name)
library(temizhavaR)
list_stations_with_parameter(parameter_name)
parameter_name <- "NOX"
list_stations_with_parameter(parameter_name)
library(temizhavaR)
library(temizhavaR)
daily_list_stations_with_parameter(parameter_name)
station_name <- "Adana - Çukurova"
parameters <- c("NOX", "PM10")
total_days <- 365
threshold <- 0.9
parameter <- "SO2"
parameter_name <- "CO"
daily_detail_data <- daily_detail_load_from_database(station_name)
daily_list_stations_with_parameter(parameter_name)
parameter_name <- "SO3"
parameter_name <- "NOX"
daily_list_stations_with_parameter(parameter_name)
View(daily_detail_data)
parameter_name <- "NO2"
daily_list_stations_with_parameter(parameter_name)
parameter_name <- "NO"
daily_list_stations_with_parameter(parameter_name)
parameter_name <- "O3"
daily_list_stations_with_parameter(parameter_name)
hourly_list_stations_with_parameter_count(parameter_name)
library(temizhavaR)
daily_list_stations_with_parameter(parameter_name)
hourly_list_stations_with_parameter_count(parameter_name)
daily_list_stations_with_parameter(parameter_name)
daily_list_stations_with_parameter_count(parameter_name)
daily_list_stations_with_parameter_count(parameter_name)
daily_list_stations_with_parameter_count(parameter_name)
library(temizhavaR)
parameter <- "PM10"
daily_list_stations_with_parameter_count(parameter_name)
daily_list_stations_with_parameter(parameter_name)
parameter <- "NO"
daily_list_stations_with_parameter(parameter_name)
parameter <- "CO"
daily_list_stations_with_parameter(parameter_name)
parameter_name <- "NOX"
daily_list_stations_with_parameter(parameter_name)
daily_list_stations_with_parameter_count(parameter_name)
