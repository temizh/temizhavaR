param_names <- gsub("\\s+", "", param_names)  # Boşlukları kaldır
param_units <- gsub(".*\\((.*)\\).*", "\\1", param_names_with_units)
param_names <- colnames(data)
# İlk satırı atla
#data <- data[-1, ]
colnames(data)[1] <- "Tarih"
# Tarih sütunu POSIXct oluyor
data$Tarih <- as.POSIXct(data$Tarih)
# Tüm sütunların tipini numeric yapma (ilk sütun hariç)
data <- data %>%
mutate(across(-1, ~as.numeric(gsub(",", ".", .))))
data <- data[-1, ]
#return(data)
#istasyon adını da datayı da parametrelri de tutsun
processed_data <- list(data = data, station_name = station_name, param_names = param_names,  param_units = param_units)
return(processed_data)
}
processed_data <- data_preprocessing(istasyon)
head(processed_data)
#' Add two
#'
#' @param data A pair of numbers.
#' @export
data_preprocessing <- function(data) {
# İstasyon adını al
station_name <- colnames(data)[2]
# Parametrelerin sütun adı olması
colnames(data) <- data[1, ]
param_names_with_units <- colnames(data)
# split param unit from param names
clean_param_names <- gsub("\\([^()]*\\)", "", param_names_with_units)
clean_param_names <- gsub("\\s+", "", clean_param_names)  # Boşlukları kaldır
param_units <- gsub(".*\\((.*)\\).*", "\\1", param_names_with_units)
param_names <- colnames(data)
colnames(data)[1] <- "Tarih"
# Tarih sütunu POSIXct oluyor
data$Tarih <- as.POSIXct(data$Tarih)
# Tüm sütunların tipini numeric yapma (ilk sütun hariç)
data <- data %>%
mutate(across(-1, ~as.numeric(gsub(",", ".", .))))
data <- data[-1, ]
#return(data)
#istasyon adını da datayı da parametrelri de tutsun
processed_data <- list(data = data, station_name = station_name, param_names = param_names,  param_units = param_units)
return(processed_data)
}
processed_data <- data_preprocessing(istasyon)
head(processed_data)
processed_data <- data_preprocessing(istasyon)
head(processed_data)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
head(processed_data)
processed_data <- data_preprocessing(istasyon)
head(processed_data)
#' Add two
#'
#' @param data A pair of numbers.
#' @export
data_preprocessing <- function(data) {
# İstasyon adını al
station_name <- colnames(data)[2]
# Parametrelerin sütun adı olması
colnames(data) <- data[1, ]
param_names_with_units <- colnames(data)
# split param unit from param names
param_names <- gsub("\\([^()]*\\)", "", param_names_with_units)
param_names <- gsub("\\s+", "", param_names)  # Boşlukları kaldır
param_units <- gsub(".*\\((.*)\\).*", "\\1", param_names_with_units)
# Birimlerden temizlenmiş parametre isimleri
param_names <- colnames(data)
colnames(data)[1] <- "Tarih"
# Tarih sütunu POSIXct oluyor
data$Tarih <- as.POSIXct(data$Tarih)
# Tüm sütunların tipini numeric yapma (ilk sütun hariç)
data <- data %>%
mutate(across(-1, ~as.numeric(gsub(",", ".", .))))
data <- data[-1, ]
#return(data)
#istasyon adını da datayı da parametrelri de tutsun
processed_data <- list(data = data, station_name = station_name, param_names = param_names,  param_units = param_units)
return(processed_data)
}
processed_data <- data_preprocessing(istasyon)
head(processed_data)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
head(processed_data)
library(temizhavaR)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
head(processed_data)
library(temizhavaR)
#' Add two
#'
#' @param data A pair of numbers.
#' @export
data_preprocessing <- function(data) {
# İstasyon adını al
station_name <- colnames(data)[2]
# Parametrelerin sütun adı olması
colnames(data) <- data[1, ]
param_names_with_units <- colnames(data)
# split param unit from param names
param_names <- gsub("\\([^()]*\\)", "", param_names_with_units)
param_names <- gsub("\\s+", "", param_names)  # Boşlukları kaldır
param_units <- gsub(".*\\((.*)\\).*", "\\1", param_names_with_units)
# Birimlerden temizlenmiş parametre isimleri
param_names <- colnames(data)
colnames(data)[1] <- "Tarih"
# Tarih sütunu POSIXct oluyor
data$Tarih <- as.POSIXct(data$Tarih)
# Tüm sütunların tipini numeric yapma (ilk sütun hariç)
data <- data %>%
mutate(across(-1, ~as.numeric(gsub(",", ".", .))))
data <- data[-1, ]
#return(data)
#istasyon adını da datayı da parametrelri de tutsun
processed_data <- list(data = data, station_name = station_name, param_names = param_names,  param_units = param_units)
return(processed_data)
}
library(temizhavaR)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
head(processed_data)
library(temizhavaR)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
head(processed_data)
library(temizhavaR)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
head(processed_data)
head(processed_data$data)
processed_data <- data_preprocessing(istasyon)
head(processed_data)
library(temizhavaR)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
head(processed_data)
processed_data <- data_preprocessing(istasyon)
head(processed_data)
print(param_names_with_units)
for (i in 1:length(processed_data$param_names)) {
cat("Parametre:", processed_data$param_names[i], "\tBirim:", processed_data$param_units[i], "\n")
}
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
for (i in 1:length(processed_data$param_names)) {
cat("Parametre:", processed_data$param_names[i], "\tBirim:", processed_data$param_units[i], "\n")
}
head(processed_data)
processed_data <- data_preprocessing(istasyon)
head(processed_data)
library(temizhavaR)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
head(processed_data)
processed_data <- data_preprocessing(istasyon)
head(processed_data)
list_stations(processed_data, "PM10")
list_stations(processed_data, "PM10 ( µg/m3 )")
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
list_stations(processed_data, "PM10 ( µg/m3 )")
processed_data <- data_preprocessing(istasyon)
head(processed_data)
library(temizhavaR)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
head(processed_data)
processed_data <- data_preprocessing(istasyon)
head(processed_data)
library(temizhavaR)
library(temizhavaR)
processed_data <- data_preprocessing(istasyon)
head(processed_data)
processed_data <- data_preprocessing(istasyon)
head(processed_data)
processed_data <- data_preprocessing(istasyon)
head(processed_data)
list_stations(processed_data, "PM10 ( µg/m3 )")
list_stations(processed_data, "PM10")
list_stations(processed_data, "PM10 ( µg/m3 )")
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
head(processed_data()
library(tidyverse)
processed_data <- data_preprocessing(istasyon)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
head(processed_data)
processed_data <- data_preprocessing(istasyon)
head(processed_data)
#' Data Preprocessing
#'
#' @param data station based air parameters data.
#' @export
data_preprocessing <- function(data) {
# take station name
station_name <- colnames(data)[2]
colnames(data) <- data[1, ]
param_names_with_units <- colnames(data)
# split param unit from param names
param_names <- gsub(" \\(.*\\)", "", param_names_with_units)
param_names <- gsub("\\s+", "", cleaning_param_names)
param_units <- gsub(".*\\((.*)\\).*", "\\1", param_names_with_units)
#param_names <- colnames(data)
colnames(data)[1] <- "Tarih"
data$Tarih <- as.POSIXct(data$Tarih)
data <- data %>%
mutate(across(-1, ~as.numeric(gsub(",", ".", .))))
data <- data[-1, ]
#return(data)
processed_data <- list(data = data, station_name = station_name, param_names = param_names,  param_units = param_units)
return(processed_data)
}
processed_data <- data_preprocessing(istasyon)
#' Data Preprocessing
#'
#' @param data station based air parameters data.
#' @export
data_preprocessing <- function(data) {
# take station name
station_name <- colnames(data)[2]
colnames(data) <- data[1, ]
param_names_with_units <- colnames(data)
# split param unit from param names
param_names <- gsub(" \\(.*\\)", "", param_names_with_units)
param_names <- gsub("\\s+", "", param_names)
param_units <- gsub(".*\\((.*)\\).*", "\\1", param_names_with_units)
#param_names <- colnames(data)
colnames(data)[1] <- "Tarih"
data$Tarih <- as.POSIXct(data$Tarih)
data <- data %>%
mutate(across(-1, ~as.numeric(gsub(",", ".", .))))
data <- data[-1, ]
#return(data)
processed_data <- list(data = data, station_name = station_name, param_names = param_names,  param_units = param_units)
return(processed_data)
}
processed_data <- data_preprocessing(istasyon)
head(processed_data)
#' Data Preprocessing
#'
#' @param data station based air parameters data.
#' @export
data_preprocessing <- function(data) {
# take station name
station_name <- colnames(data)[2]
colnames(data) <- data[1, ]
param_names_with_units <- colnames(data)
# split param unit from param names
param_names <- gsub(" \\(.*\\)", "", param_names_with_units)
param_names <- gsub("\\s+", "", param_names)
param_units <- gsub(".*\\((.*)\\).*", "\\1", param_names_with_units)
param_names <- colnames(data)
colnames(data)[1] <- "Tarih"
data$Tarih <- as.POSIXct(data$Tarih)
data <- data %>%
mutate(across(-1, ~as.numeric(gsub(",", ".", .))))
data <- data[-1, ]
#return(data)
processed_data <- list(data = data, station_name = station_name, param_names = param_names,  param_units = param_units)
return(processed_data)
}
processed_data <- data_preprocessing(istasyon)
head(processed_data)
#' Data Preprocessing
#'
#' @param data station based air parameters data.
#' @export
data_preprocessing <- function(data) {
# take station name
station_name <- colnames(data)[2]
colnames(data) <- data[1, ]
param_names_with_units <- colnames(data)
# split param unit from param names
param_names <- gsub(" \\(.*\\)", "", param_names_with_units)
param_names <- gsub("\\s+", "", param_names)
param_units <- gsub(".*\\((.*)\\).*", "\\1", param_names_with_units)
#param_names <- colnames(data)
colnames(data)[1] <- "Tarih"
data$Tarih <- as.POSIXct(data$Tarih)
data <- data %>%
mutate(across(-1, ~as.numeric(gsub(",", ".", .))))
data <- data[-1, ]
#return(data)
processed_data <- list(data = data, station_name = station_name, param_names = param_names,  param_units = param_units)
return(processed_data)
}
processed_data <- data_preprocessing(istasyon)
head(processed_data)
#' Data Preprocessing
#'
#' @param data station based air parameters data.
#' @export
data_preprocessing <- function(data) {
# take station name
station_name <- colnames(data)[2]
colnames(data) <- data[1, ]
param_names_with_units <- colnames(data)
# split param unit from param names
param_names <- gsub(" \\(.*\\)", "", param_names_with_units)
param_names <- gsub("\\s+", "", param_names)
param_units <- gsub(".*\\((.*)\\).*", "\\1", param_names_with_units)
colnames(data) <- c("Tarih", param_names)
#colnames(data)[1] <- "Tarih"
data$Tarih <- as.POSIXct(data$Tarih)
data <- data %>%
mutate(across(-1, ~as.numeric(gsub(",", ".", .))))
data <- data[-1, ]
#return(data)
processed_data <- list(data = data, station_name = station_name, param_names = param_names,  param_units = param_units)
return(processed_data)
}
processed_data <- data_preprocessing(istasyon)
head(processed_data)
#' Data Preprocessing
#'
#' @param data station based air parameters data.
#' @export
data_preprocessing <- function(data) {
# take station name
station_name <- colnames(data)[2]
colnames(data) <- data[1, ]
param_names_with_units <- colnames(data)
# split param unit from param names
param_names <- gsub(" \\(.*\\)", "", param_names_with_units)
param_names <- gsub("\\s+", "", param_names)
param_units <- gsub(".*\\((.*)\\).*", "\\1", param_names_with_units)
colnames(data) <- param_names
colnames(data)[1] <- "Tarih"
data$Tarih <- as.POSIXct(data$Tarih)
data <- data %>%
mutate(across(-1, ~as.numeric(gsub(",", ".", .))))
data <- data[-1, ]
#return(data)
processed_data <- list(data = data, station_name = station_name, param_names = param_names,  param_units = param_units)
return(processed_data)
}
processed_data <- data_preprocessing(istasyon)
head(processed_data)
list_stations(processed_data, "PM10")
list_stations(processed_data, "NOX")
library(temizhavaR)
library(temizhavaR)
#library(RSQLite)
# reading excel
# data_dir <- "C:/Fonksiyon_sehirler/"
# istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
# create a connection to database
mydb <- dbConnect(RSQLite::SQLite(), "temiz-hava.sqlite")
library(DBI)
library(readxl)
#library(RSQLite)
# reading excel
# data_dir <- "C:/Fonksiyon_sehirler/"
# istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
# create a connection to database
mydb <- dbConnect(RSQLite::SQLite(), "temiz-hava.sqlite")
# Write the istasyon dataset into a table
# dbWriteTable(mydb, "adana-catalan-saatlik-detay", istasyon)
dbListTables(mydb)
head(hourly_detail, 10)
dbReadTable(mydb, "hourly_detail")
data_dir <- "C:/Fonksiyon_sehirler/"
stations <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
dbWriteTable(mydb, "hourly_detail", stations, append = TRUE, row.names = FALSE)
colnames(stations)
dbDisconnect(mydb)
library(temizhavaR)
ibrary(tidyverse)
library(tidyverse)
library(readxl)
library(dplyr)
library(temizhavaR)
data_dir <- "C:/Fonksiyon_sehirler/"
istasyon <- read_excel(paste0(data_dir, "adana-catalan-saatlik-detay.xlsx"))
processed_data <- data_preprocessing(istasyon)
list_stations(processed_data, "NOX")
count_stations(processed_data, "NOX")
count_stations(processed_data, "PM10")
count_stations(processed_data, "PM10")
list_stations(processed_data, "NOX")
count_stations(processed_data, "PM10")
count_stations(processed_data, "PM10")
list_stations(processed_data, "NOX")
#' Count Stations
#'
#' @param processed_data processed data.
#' @param param_name specified paramater name.
#' @export
if (!is.null(station_name)) {
if (param_name %in% param_names) {
if (param_name %in% colnames(data)) {
if (any(!is.na(data[[param_name]]))) {
cat(paste0(param_name, " stations:\n"))
cat(station_name, "\n")
num_stations <- length(station_name)
cat(paste0("Total number of stations: ", num_stations, "\n"))
} else {
cat("No station found containing any value for the specified parameter.\n")
}
} else {
cat(paste0(param_name, " parameter not found.\n"))
}
} else {
cat(paste0("Invalid parameter: ", param_name, ".\n"))
}
} else {
cat("Station names not found.\n")
}
#' Count Stations
#'
#' @param processed_data processed data.
#' @param param_name specified paramater name.
#' @export
count_stations <- function(processed_data, param_name) {
data <- processed_data$data
station_name <- processed_data$station_name
param_names <- processed_data$param_names
if (!is.null(station_name)) {
if (param_name %in% param_names) {
if (param_name %in% colnames(data)) {
if (any(!is.na(data[[param_name]]))) {
cat(paste0(param_name, " stations:\n"))
cat(station_name, "\n")
num_stations <- length(station_name)
cat(paste0("Total number of stations: ", num_stations, "\n"))
} else {
cat("No station found containing any value for the specified parameter.\n")
}
} else {
cat(paste0(param_name, " parameter not found.\n"))
}
} else {
cat(paste0("Invalid parameter: ", param_name, ".\n"))
}
} else {
cat("Station names not found.\n")
}
}
count_stations(processed_data, "PM10")
list_stations(processed_data, "NOX")
View(istasyon)
dbDisconnect(mydb)
